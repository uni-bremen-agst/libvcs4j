plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'jacoco'
	id 'io.freefair.lombok' version '8.4'
}

group = 'de.uni-bremen.informatik.st'
version = '2.0.0'

repositories {
	mavenCentral()
}

configurations {
	extraLibs
}

dependencies {
	api(project(':libvcs4j-api'))

	// Add local jars from the 'libs' directory.
	extraLibs(fileTree(dir: 'libs', include: '*.jar'))
	// Required by JavaHG.
	api('com.google.guava:guava:24.1-jre')
	// Override 1.9, see https://github.com/uni-bremen-agst/libvcs4j/issues/2
	api("commons-codec:commons-codec:1.11")

	api('com.ibm.icu:icu4j:59.1')
	api('org.eclipse.jgit:org.eclipse.jgit:4.10.0.201712302008-r')
	api('org.gitlab:java-gitlab-api:4.0.0')
	api('org.kohsuke:github-api:1.92')
	api('org.slf4j:slf4j-api:1.7.22')
	api('org.tmatesoft.svnkit:svnkit:1.9.1')
	testImplementation(project(':testutils'))

	configurations.implementation.extendsFrom(configurations.extraLibs)
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		getClassDirectories().from(
				files(classDirectories.files.collect { 
					fileTree(dir: it, exclude: 'bmsi/**') 
				}))
	}
}

tasks.register('sourcesJar', Jar) {
	dependsOn classes
	archiveClassifier = 'sources'
	from delombok
}

javadoc {
	exclude 'bmsi/util'
}

tasks.register('javadocJar', Jar) {
	dependsOn javadoc
	archiveClassifier = 'javadoc'
	from javadoc.destinationDir
}

jar {
	from {
		configurations.extraLibs.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			pom {
				name = 'libvcs4j'
				description = 'A Java Library for Repository Mining'
				url = 'https://github.com/uni-bremen-agst/libvcs4j'
				licenses {
					license {
						name = 'GPL-3.0'
						url = 'https://opensource.org/licenses/GPL-3.0'
					}
				}
				developers {
					developer {
						name = 'Marcel Steinbeck'
						email = 'marcel@informatik.uni-bremen.de'
						organization = 'AG Softwaretechnik (University of Bremen)'
						organizationUrl = 'https://www.informatik.uni-bremen.de/st'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/uni-bremen-agst/libvcs4j.git'
					developerConnection = 'scm:git:ssh://github.com:uni-bremen-agst/libvcs4j.git'
					url = 'https://github.com/uni-bremen-agst/libvcs4j'
				}
			}
			repositories {
				maven {
					url = layout.buildDirectory.dir("repository")
				}
			}
		}
	}
}
